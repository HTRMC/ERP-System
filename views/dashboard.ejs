<!DOCTYPE html>
<html>
  <head>
    <title>Dashboard</title>
    <link rel="icon" type="image/x-icon" href="/images/favicon.ico">
    <link rel="stylesheet" href="/css/style-dashboard.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  </head>
  <body>
    <div class="main-container">
      <div class="container">
        <div class="sidebar-container">
          <div class="menu-container">
            <div class="top-menu-container">
              <div class="menu-icon">
                <img src="/images/hamburger.png" alt="menu-knop" draggable="false"/>
              </div>
              <div class="logo">
                <img src="/images/logo.png" alt="Logo" draggable="false"/>
              </div>
            </div>
            <div class="bottom-menu-container">
              <div class="dashboard-container">
                <a href="/dashboard" class="dashboard">
                  <i class="icon-dashboard"></i>
                  <span>Dashboard</span>
                </a>
              </div>
            </div>
          </div>
          <div class="sidebar-menu">
            <ul>
              <li>
                <a href="/projects">
                  <i class="icon-ui-elements"></i>
                  <span>Projecten</span>
                </a>
              </li>
              <% if (user.role_id === 3) { %>
              <li>
                <a href="/users">
                  <i class="icon-form-elements"></i>
                  <span>Gebruikers</span>
                </a>
              </li>
              <% } %>
              <% if (user.role_id === 3 || user.role_id === 2) { %>
                <li>
                  <a href="/reports/hours">
                    <i class="icon-tables"></i>
                    <span>Rapporten</span>
                  </a>
                </li>
                <% } %>
              <li>
                <a href="/invoices">
                  <i class="icon-icons"></i>
                  <span>Facturen</span>
                </a>
              </li>
            </ul>
          </div>
        </div>
        <div class="main-content-container">
          <div class="search-container">
            <div class="search-container-left">
              <div class="message-container">
                <div class="welcome-massage">
                  <h2>Welkom, <%= user.name %></h2>
                </div>
                <div class="additional-massage"></div>
              </div>
            </div>
            <div class="search-container-right">
          <div class="search-bar-container">
            <div class="search-bar">
              <i class="fas fa-search"></i>
              <input type="search" name="search" id="searchInput" placeholder="Zoeken" oninput="performSearch()" />
              <div class="search-results" id="searchResults"></div>
            </div>
          </div>
          <div class="account-button">
            <div class="circle" id="accountCircle"></div>
            <div class="logout-menu" id="logoutMenu">
              <button class="logout-button" onclick="logout()">Log Out</button>
            </div>
          </div>
        </div>
      </div>
          <div class="content-container">
            <div class="general-container">
              <div>
                <p class="title">Uren Jaarbasis</p>
                <h3 class="Tijd"><%= typeof totalHoursCurrentYear === 'number' ? totalHoursCurrentYear.toFixed(2) : '0.00' %> uur</h3>
              </div>
              <div>
                <p class="title">Inklok tijd</p>
                <h3 class="inklok-begin-tijd"><%= lastClockEntry ? new Date(lastClockEntry.clock_in_time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) : 'N/A' %></h3>
              </div>
              <div>
                <p class="title">Werktijd</p>
                <h3 class="werktijd" id="werktijd"><%= isClockedIn ? '00:00:00' : '--:--:--' %></h3>
              </div>
              <div>
                <p class="title">Ingeklokt</p>
                <h3 class="ingeklokt"><%= isClockedIn ? 'Ja' : 'Nee' %></h3>
              </div>
            </div>
            <div class="cards-container">
              <div class="links-cards-container">
                <div class="inklok-container">
                  <div class="inklok-boven">
                    <h4>Inklokken</h4>
                    <h5>Hier kan je inklokken</h5>
                  </div>
                  <div class="inklok-onder">
                    <div class="button-container">
                      <% if (!isClockedIn) { %>
                      <form id="clock-in-form" action="/clock/clock-in" method="post">
                        <div class="form-group">
                          <div class="label-container">
                            <label for="project_id">Project:</label>
                          </div>
                          <div class="select-container">
                            <select name="project_id" required>
                              <% projects.forEach(project => { %>
                                <option value="<%= project.id %>"><%= project.name %></option>
                              <% }) %>
                            </select>
                          </div>
                        </div>
                        <button type="submit">Inklokken</button>
                      </form>
                      <% } else { %>
                      <form id="clock-out-form" action="/clock/clock-out" method="post">
                        <div class="form-group">
                          <div class="label-container">
                            <label for="project_id">Project:</label>
                          </div>
                          <div class="select-container">
                            <select name="project_id" required>
                              <% projects.forEach(project => { %>
                                <option value="<%= project.id %>" <%= lastClockEntry && lastClockEntry.project_id === project.id ? 'selected' : '' %>><%= project.name %></option>
                              <% }) %>
                            </select>
                          </div>
                        </div>
                        <button type="submit">Uitklokken</button>
                      </form>
                      <% } %>
                    </div>
                  </div>
                </div>
                <div class="donut-card-container">
                  <canvas id="donutChart" width="400" height="400"></canvas>
                </div>
              </div>
              <div class="rechts-cards-container">
                <div class="opdrachten-card-container">
                  <h4>Projecten</h4>
                  <ul>
                    <% projects.forEach(project => { %>
                      <li><%= project.name %></li>
                    <% }) %>
                  </ul>
                </div>
                <div class="top-klant-container">
                  <h4>Top Klanten</h4>
                  <ul>
                    <% companiesWithProjectCount.forEach(company => { %>
                      <li><%= company.company_name %> - <%= company.project_count %> projecten</li>
                    <% }) %>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function() {
        const hoursByProject = <%- JSON.stringify(hoursByProject || []) %>;
        const lastClockInTime = <%- JSON.stringify(lastClockEntry ? lastClockEntry.clock_in_time : null) %>;
        const isClockedIn = <%= isClockedIn %>;
    
        const labels = hoursByProject.map(entry => entry.project_name);
        const data = hoursByProject.map(entry => entry.hours_worked);
    
        const projects = {
          labels: labels,
          datasets: [
            {
              label: "Hours Worked",
              data: data,
              backgroundColor: [
                "rgba(255, 99, 132, 0.5)",
                "rgba(54, 162, 235, 0.5)",
                "rgba(255, 206, 86, 0.5)",
                "rgba(75, 192, 192, 0.5)",
                "rgba(153, 102, 255, 0.5)",
                "rgba(255, 159, 64, 0.5)",
              ],
              borderColor: [
                "rgba(255, 99, 132, 1)",
                "rgba(54, 162, 235, 1)",
                "rgba(255, 206, 86, 1)",
                "rgba(75, 192, 192, 1)",
                "rgba(153, 102, 255, 1)",
                "rgba(255, 159, 64, 1)",
              ],
              borderWidth: 1,
            },
          ],
        };
    
        const donutChartCanvas = document.getElementById("donutChart");
        const donutChart = new Chart(donutChartCanvas, {
          type: "doughnut",
          data: projects,
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              tooltip: {
                callbacks: {
                  label: function(context) {
                    let label = context.dataset.label || '';
                    if (label) {
                      label += ': ';
                    }
                    if (context.parsed !== null) {
                      label += context.parsed.toFixed(2) + ' uur';
                    }
                    return label;
                  }
                }
              }
            }
          },
        });
    
        function updateWorkingTime() {
          if (isClockedIn && lastClockInTime) {
            const startTime = new Date(lastClockInTime).getTime();
            const currentTime = new Date().getTime();
            const diff = currentTime - startTime;
    
            const hours = Math.floor(diff / (1000 * 60 * 60));
            const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((diff % (1000 * 60)) / 1000);
    
            document.getElementById("werktijd").textContent = 
              String(hours).padStart(2, "0") + ":" +
              String(minutes).padStart(2, "0") + ":" +
              String(seconds).padStart(2, "0");
          }
        }
    
        setInterval(updateWorkingTime, 1000);
    
        const accountCircle = document.getElementById('accountCircle');
  const logoutMenu = document.getElementById('logoutMenu');

  accountCircle.addEventListener('click', function(event) {
    event.stopPropagation(); // Prevent click event from propagating to document
    logoutMenu.style.display = logoutMenu.style.display === 'block' ? 'none' : 'block';
  });

  // Close the logout menu when clicking outside of it
  document.addEventListener('click', function(event) {
    if (!logoutMenu.contains(event.target) && event.target !== accountCircle) {
      logoutMenu.style.display = 'none';
    }
  });

  // Close the logout menu when pressing the "Esc" key
  document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape') {
      logoutMenu.style.display = 'none';
    }
  });

  window.logout = function() {
    fetch('/logout', { method: 'POST' })
      .then(response => {
        if (response.ok) {
          window.location.href = '/login';
        }
      })
      .catch(error => console.error('Error:', error));
  }
      });
    </script>
    <script>
      async function performSearch() {
        const query = document.getElementById('searchInput').value;
    
        if (query.length < 3) { // Minimum 3 characters to start searching
          document.getElementById('searchResults').innerHTML = '';
          return;
        }
    
        try {
          const response = await fetch(`/search?q=${query}`);
          const results = await response.json();
          displayResults(results);
        } catch (err) {
          console.error('Error during search:', err);
        }
      }
    
      function displayResults(results) {
        const resultsContainer = document.getElementById('searchResults');
        resultsContainer.innerHTML = '';

        if (results.length === 0) {
          resultsContainer.innerHTML = '<p>No results found</p>';
          return;
        }

        results.forEach(result => {
          const resultElement = document.createElement('div');
          resultElement.className = 'search-result';
          resultElement.innerHTML = `
            <div onclick="displayUserDetails(${result.id})">
              <strong>${result.type}</strong>: ${result.name || result.project}
            </div>
          `;
          resultsContainer.appendChild(resultElement);
        });
      }

      function displayUserDetails(userId) {
        const currentUrl = window.location.href;
        if (!currentUrl.endsWith('/users')) {
          window.location.href = `/users?userId=${userId}`;
        } else {
          const userElement = document.getElementById(`user-${userId}`);
          if (userElement) {
            userElement.scrollIntoView();
            userElement.querySelector('.additional-details').style.display = 'block';
          }
        }
        document.getElementById('searchResults').innerHTML = '';
      }
    </script>
    <style>
      .search-results {
        position: absolute;
        background: white;
        margin-top: 7%;
        width: 20%;
        z-index: 1000;
      }
      .search-result {

        padding: 10px;
        border-bottom: 1px solid #ccc;
      }
      .search-result a {
        text-decoration: none;
        color: black;
      }
      .search-result a:hover {
        background-color: #f0f0f0;
      }

    </style>
  </body>
</html>
